name: MLflow Pipelines Example Tests

on:
  push:
    branches:
      - main
      - branch-[0-9]+.[0-9]+
  pull_request:
    branches:
      - main
      - branch-[0-9]+.[0-9]+

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

# Use `bash --noprofile --norc -exo pipefail` by default for all `run` steps in this workflow:
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#defaultsrun
defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}

env:
  # Note miniconda is pre-installed in the virtual environments for GitHub Actions:
  # https://github.com/actions/virtual-environments/blob/main/images/linux/scripts/installers/miniconda.sh
  MLFLOW_CONDA_HOME: /usr/share/miniconda

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/setup-python
      with:
        python-version: "3.7"
    - uses: ./.github/actions/cache-pip
    - name: Add problem matchers
      run: |
        echo "::add-matcher::.github/workflows/matchers/pylint.json"
    - name: Install dependencies
      run: |
        pip install -r .github/workflows/scripts/lint-requirements.txt
    - name: Run lint checks
      run: |
        .github/workflows/scripts/lint.sh

  # # Temporarily create a separate job for MLflow pipelines to facilitate
  # # ease of debugging while quickly iterating on the implementation
  # pipelines:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up mlflow-pipelines-example-private submodule deploy key
  #       env:
  #         SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  #       run: |
  #           ssh-agent -a $SSH_AUTH_SOCK > /dev/null
  #           ssh-add - <<< "${{ secrets.REPO_PRIVATE_SSH_KEY }}"
  #     - name: Initialize submodules
  #       env:
  #         SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  #       run: |
  #         git submodule update --init
  #     - uses: ./.github/actions/setup-python
  #       with:
  #         python-version: "3.7"
  #     - name: Install dependencies
  #       env:
  #         INSTALL_SMALL_PYTHON_DEPS: true
  #         INSTALL_LARGE_PYTHON_DEPS: false
  #       run: |
  #         source ./dev/install-common-deps.sh
  #     - name: Run tests
  #       run: |
  #         export MLFLOW_HOME=$(pwd)
  #         pytest tests/pipelines
  #
  # # Temporarily create a separate job for MLflow pipelines on Windows to facilitate
  # # ease of debugging while quickly iterating on the implementation
  # pipelines-windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v3
  #       with:
  #         python-version: "3.7"
  #     - name: Initialize submodules
  #       run: |
  #         # Start Windows SSH agent and add private deploy key for
  #         # mlflow-pipelines-example-private submodule
  #         eval `ssh-agent.exe`
  #         ssh-add - <<< "${{ secrets.REPO_PRIVATE_SSH_KEY }}"
  #         # Add github.com to known hosts
  #         mkdir -p ~/.ssh
  #         ssh-keyscan -t ed25519 github.com >> ~/.ssh/known_hosts
  #         # Initialize submodules
  #         git submodule update --init
  #     - name: Install python dependencies
  #       run: |
  #         pip install -r requirements/small-requirements.txt
  #         pip install --no-dependencies tests/resources/mlflow-test-plugin
  #         pip install -e .[extras]
  #     - name: Run tests
  #       run: |
  #         export MLFLOW_HOME=$(pwd)
  #         pytest tests/pipelines
